#/usr/bin/env python
'''
Author: Li Hao
Date: 2022-04-12 10:10:24
LastEditTime: 2022-04-12 10:31:54
LastEditors: Li Hao
Description: 

FilePath: \pyMC\lib\LegendreGrid.py
Motto: A + B = C!
'''

import numpy

def MakeLegendreGrid(n_theta, n_phi):
    
    if n_phi <= 0:
        raise ValueError('n_phi %d is not valid, please check', n_theta)
    costheta, weights_theta = legendre_gen_cthwth(n_theta)
    grids = numpy.zeros((n_theta*n_phi,4))
    sintheta = numpy.sqrt(1.0 - costheta**2)
    
    dphi = numpy.pi*2/n_phi
    phi = numpy.asarray([i*dphi for i in range(1,1+n_phi)])
    cosphi = numpy.cos(phi)
    sinphi = numpy.sin(phi)
    onephi = numpy.ones((n_phi))
    grids[:,0] = numpy.einsum('i,j->ij',sintheta,cosphi).ravel()
    grids[:,1] = numpy.einsum('i,j->ij',sintheta,sinphi).ravel()
    grids[:,2] = numpy.einsum('i,j->ij',costheta,onephi).ravel()
    grids[:,3] = numpy.einsum('i,j->ij',weights_theta,onephi*dphi).ravel()
    
    return grids
    

def legendre_gen_cthwth(n_theta):
    Cthwth_generator = Cthwth_dict.get(str(n_theta), None)
    if Cthwth_generator is None:
        raise ValueError('ntheta %d is wrong', n_theta)
    costheta, weights_theta = Cthwth_generator(n_theta)
    
    return costheta, weights_theta

def legendre_10(n_theta):
    xx = (.14887433898163121090256738150144E0, .4333953941292472880722554253725339E0, 
      .6794095682990244062343284330294593E0, .8650633666889845107320993779220613E0, 
      .9739065285171717200779640120847098E0)
    wx = (.2955242247147528701563316887833145E0, .2692667193099960475978192019395357E0,
      .2190863625159820439955284389310273E0, .1494513491505805931457459435274207E0,
      6.667134430868813759356880988618432E-02)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 5
    n1 = nn - 1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
        
    return costheta, weights_theta

def legendre_15(n_theta):
    xx = (.0E0, .2011940939974345223031262911442595E0, 
      .3941513470775633698972073715908093E0, .5709721726085388536110738454612162E0, 
      .724417731360170047416186160050245E0,  .8482065834104272162006487640189985E0, 
      .9372733924007059044289015536195144E0, .9879925180204854284895659147660912E0)
    wx = (.2025782419255612728806201999675193E0, .198431485327111576452792407671817E0, 
      .1861610000155622110268005601713465E0, .1662692058169939061761511478592083E0, 
      .1395706779261543144478040766676918E0, .1071592204671719350118649513067649E0, 
     7.036604748810812260532610539392618E-02,3.075324199611726835462040293974857E-02)
    
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    costheta[7] = xx[0]
    weights_theta[7] = wx[0]
    for i in range(1,8):
        costheta[7+i] = xx[i]
        costheta[8-i] =-xx[i]
        weights_theta[7+i] = wx[i]
        weights_theta[8-i] = wx[i]
        
    return costheta, weights_theta

def legendre_20(n_theta):
    xx = (7.652652113349733384459882780205850E-02, .2277858511416451552145074612592124E0, 
       .3737060887154195668720266546598165E0,  .5108670019508271170689673539054538E0, 
       .6360536807265150254528368563071475E0,  .7463319064601507926143098592900874E0, 
       .839116971822218823394539548704722E0,   .9122344282513259058746886861932658E0, 
       .963971927277913803435583848764018E0,   .9931285991850949247861223884716688E0)
    wx = (.1527533871307258506536575597912287E0,  .1491729864726036306826056439815109E0, 
      .1420961093183820352582282465308072E0,  .131688638449176554006468093301068E0,  
      .1181945319615184173123765288339693E0,  .101930119817240435036715594863279E0,  
     8.327674157670474872465412071037941E-02,6.267204833410906347026608105485055E-02,
     4.060142980038665865111812048100353E-02,1.761400713915211831186196233315461E-02)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 10
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_25(n_theta):
    xx = (0.E0, .1228646926107104094522701854732443E0, .2438668837209884320451903627974814E0, 
      .3611723058093878377358217304622914E0, .4730027314457149608502533386686537E0, 
      .5776629302412229677236898453037326E0, .6735663684734683644851206337600076E0, 
      .7592592630373576305772828653826368E0, .8334426287608340014210252926683833E0, 
      .8949919978782753688510464176762574E0, .9429745712289743394163761559648384E0, 
      .9766639214595175114983153864955996E0, .9955569697904980979087849471987675E0
	  )
    wx = (.1231760537267154512039028730790501E0,    .1222424429903100313288373173785458E0,  
      .119455763535784772228178126512853E0,     .1148582591457116483393255450393707E0,  
      .1085196244742636519880357836040489E0,    .1005359490670506442022068736633353E0,  
      9.102826198296364981149721771256276E-02, 8.014070033500101801323495833724817E-02, 
      6.803833381235691720714678479742529E-02, 5.490469597583519192588025081879362E-02, 
      4.093915670130631261277503223993585E-02, 2.635498661503213726190181483086781E-02, 
      1.139379850102628794790294383157771E-02)
    
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    costheta[12] = xx[0]
    weights_theta[12] = wx[0]
    for i in range(1,12):
        costheta[12+i] = xx[i]
        costheta[11-i] =-xx[i]
        weights_theta[12+i] = wx[i]
        weights_theta[11-i] = wx[i]
        
    return costheta, weights_theta

def legendre_30(n_theta):
    xx = (5.147184255531769583302521316698091E-02, .1538699136085835469637946727622205E0, 
      .2546369261678898464398051300076144E0,   .3527047255308781134710372080703732E0, 
      .4470337695380891767806099039173564E0,   .5366241481420198992641698040024257E0, 
      .6205261829892428611404775842916683E0,   .6978504947933157969322924552033924E0, 
      .7677774321048261949179774987505177E0,   .8295657623827683974428981197351207E0,  
      .8825605357920526815431164625476776E0,   .9262000474292743258793242771356641E0, 
      .960021864968307512238534037531062E0,    .9836681232797472103053461469899687E0, 
      .9968934840746495404697957676312736E0)
    wx = (.1028526528935588403412856367053299E0,   .1017623897484055045964289521496967E0,  
      9.959342058679526706278028178443396E-02,9.636873717464425963946862399077494E-02, 
      9.212252223778612871763269561772634E-02,8.689978720108297980238748730288259E-02, 
      8.075589522942021535469479770134336E-02,7.375597473770520626824343214471924E-02, 
      6.597422988218049512812730810744553E-02,5.749315621761906648172168937722171E-02, 
      4.840267283059405290293814021373906E-02,3.879919256962704959680193558133357E-02, 
      2.878470788332336887605555614772880E-02,1.846646831109094748574897457739528E-02, 
      7.968192496166589882873079461648789E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 15
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_40(n_theta):
    xx = (3.877241750605083096022084680109425E-02,.116084070675255240595713355107779E0,  
       .1926975807013711025692398134309138E0, .2681521850072537208851743821069699E0, 
       .3419940908257584730074924811792082E0, .4137792043716050138379478216940234E0, 
       .4830758016861787129085665742498159E0, .5494671250951282021732855356049054E0, 
       .6125538896679802379697956813841464E0, .6719566846141795483793545257319002E0, 
       .7273182551899271032810121328108299E0, .7783056514265193876949715976325874E0, 
       .8246122308333116631963202306713492E0, .8659595032122595038207818243017554E0, 
       .9020988069688742967282533316422757E0, .9328128082786765333687820900585682E0, 
       .9579168192137916558050002839861704E0, .9772599499837742628013362243962817E0, 
       .9907262386994570064530543523920644E0, .9982377097105592003496230505207567E0)
    wx = (7.750594797842480903595631570622777E-02, 7.703981816424794171762925137918006E-02, 
      7.611036190062623880721812111017271E-02, 7.472316905796819383954867035346899E-02, 
      7.288658239580405906051068344248567E-02, 7.061164739128674410103030827436036E-02, 
      6.791204581523390382569010821440393E-02, 6.480401345660103766735858584468887E-02, 
      6.130624249292893908184604435410109E-02, 5.743976909939155136661766876006134E-02, 
      5.322784698393682435489079215272470E-02, 4.869580763507223206143374953527100E-02, 
      4.387090818567327199167468599304472E-02, 3.878216797447201763997185570522530E-02, 
      3.346019528254784739267817280164725E-02, 2.793700698002340096799804686188021E-02, 
      2.224584919416695725176408401558768E-02, 1.642105838190788467509141514152840E-02, 
      1.049828453115281361474216318172638E-02, 4.521277098533191258435149097403491E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 20
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_48(n_theta):
    xx = (3.238017096286936213717937369164487E-02,9.700469920946269893005395585362955E-02, 
       .1612223560688917180564373907835042E0, .2247637903946890612248654401851448E0, 
       .2873624873554555767358864613728275E0, .3487558862921607389643020761100634E0, 
       .4086864819907167299162254986230863E0, .4669029047509584218317686615851854E0, 
       .5231609747222330422242551939305755E0, .5772247260839727038178094064101121E0, 
       .6288673967765136239951649331222386E0, .6778723796326639052118512806802372E0, 
       .7240341309238146546744872131419868E0, .7671590325157403392538554377568885E0, 
       .8070662040294426270825530456801354E0, .8435882616243935307110904506748092E0, 
       .8765720202742478859057056316669855E0, .9058791367155696728220749903082157E0, 
       .9313866907065543331152332455054891E0, .952987703160430860723630562381054E0,  
       .9705915925462472507712455376748979E0, .9841245837228268577445901397587376E0, 
       .9935301722663507575479287515190534E0, .9987710072524261186005418067481392E0)
    wx = (6.473769681268392248166724459427003E-02, 6.446616443595008220650419365770191E-02, 
      6.392423858464818662390620182550872E-02, 6.311419228625402565712602273492893E-02, 
      6.203942315989266390419778403089639E-02, 6.070443916589387815272949707374242E-02, 
      5.911483969839563574647480945085550E-02, 5.727729210040315776987803281648378E-02, 
      5.519950369998412956826954475490675E-02, 5.289018948519366709550430305637610E-02, 
      5.035903555385447495780761881965048E-02, 4.761665849249047482590662345359907E-02, 
      4.467456085669428041941540968774063E-02, 4.154508294346474921405882058539429E-02, 
      3.824135106583070631721723348553055E-02, 3.477722256477043889254254227598733E-02, 
      3.116722783279808890192615630642378E-02, 2.742650970835694820007173732452332E-02, 
      2.357076083932437912332862902458898E-02, 1.961616045735552780109402539662388E-02, 
      1.557931572294384080551190657945507E-02, 1.147723457923453948936285210996459E-02, 
      7.327553901276262102383942561227964E-03, 3.153346052305838632637709568398100E-03)
    
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 24
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_50(n_theta):
    xx = (3.109833832718895613958738195143670E-02, 9.317470156008614085445037767231684E-02, 
      .1548905899981459021330304695065265E0, .2160072368760417568472845327846266E0,  
      .2762881937795319903276452785213526E0, .3355002454194375163254661680425457E0,  
      .3934143118975651273942293747172358E0, .449806334974038789147131467778392E0,   
      .5044581449074642016514591324164119E0, .557158304514650054315522909625957E0,   
      .6077029271849502392781346148063358E0, .6558964656854393607816251887199993E0,  
      .7015524687068222510895462580189049E0, .7444943022260685382605362529041295E0,  
      .7845558329003992639053052305034176E0, .8215820708593359483562541108761614E0,  
      .85542976942994608461652525055377E0,   .8859679795236130486375409953625276E0,  
      .9130785566557918930897412953110398E0, .9366566189448779339500578276614259E0,  
      .9566109552428079429977768855571797E0, .9728643851066920737930937940733593E0,  
      .9853540840480058823090096847337903E0, .994031969432090712585108201262752E0,   
      .9988664044200710501854597510499103E0)
    wx = (6.217661665534724652228796881478910E-02, 6.193606742068324338408750976140413E-02, 
      6.145589959031666369532433553258662E-02, 6.073797084177021603175001514965236E-02, 
      5.978505870426545750957640531217940E-02, 5.860084981322208543291334119660170E-02, 
      5.718992564772838372302898681950324E-02, 5.555774480621251762356742561221778E-02, 
      5.371062188899624652345879515278013E-02, 5.165570306958113848990529583943384E-02, 
      4.940093844946631444663551245731967E-02, 4.695505130394843296563122344309842E-02, 
      4.432750433880327549202228598559247E-02, 4.152846309014769742241197739383582E-02, 
      3.856875661258767524476987598837053E-02, 3.545983561514615416073461098066059E-02, 
      3.221372822357801659406907890238028E-02, 2.884299358053519802990621681833198E-02, 
      2.536067357001239044011458995586776E-02, 2.178024317012479011183025923416905E-02, 
      1.811556071348939035060946450056843E-02, 1.438082276148557229354998796330033E-02, 
      1.059054838365096926356751801632142E-02, 6.759799195745401502778829681214809E-03, 
      2.908622553155140958360694685499917E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 25
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_60(n_theta):
    xx = (2.595977230124779858917038540034557E-02, 7.780933394953656941928550708227231E-02, 
       .1294491353969450031464441646496093E0, .1807399648734254172408769412630336E0,                
       .2315435513760293380103446313468108E0, .2817229374232616916906948603471838E0, 
       .3311428482684481942523529653505861E0, .3796700565767979771549526705494943E0, 
       .4271737415830785160439250201588767E0, .4735258417617071111081630538140165E0, 
       .5186014000585697753370311206401129E0, .5622789007539445391782725875630471E0, 
       .6044405970485103644211184096566298E0, .6449728284894770678134478964529579E0, 
       .6837663273813554373402079606879897E0, .7207165133557303994360223766628641E0, 
       .7557237753065857257425570328841713E0, .7886937399322640545699447997772753E0, 
       .8195375261621457593685181146886333E0, .8481719847859296324952781605307269E0, 
       .8745199226468983151293099138030412E0, .8985103108100459419377893298823073E0, 
       .9200784761776275528566666460679424E0, .9391662761164232495113550665092873E0, 
       .9557222558399961099682278928709495E0, .969701788765052733768865344637484E0,  
       .981067201752598185618590413767173E0,  .9897878952222217173672789870161873E0, 
       .9958405251188381738767467181178896E0, .9992101232274360220342298471825893E0)
    wx = (5.190787763122063973286493836226955E-02, 5.176794317491018754380364302880049E-02, 
      5.148845150098093399504439717702661E-02, 5.107015606985562740454912073311627E-02, 
      5.051418453250937459823873574157012E-02, 4.982203569055018101115923087930266E-02, 
      4.899557545575683538947568685782001E-02, 4.803703181997118096366665265696127E-02, 
      4.694898884891182553860302541293285E-02, 4.573437971611448664719645508240359E-02, 
      4.439647879578700605353408003707554E-02, 4.293889283593564195423122032451152E-02, 
      4.136555123558475091777773853537158E-02, 3.968069545238079947012283463788170E-02, 
      3.788886756924344333478770699044575E-02, 3.599489805108450306656998164213484E-02, 
      3.400389272494613867016028199584772E-02, 3.192121901929632894945889953627616E-02, 
      2.975249150078894524083642878626740E-02, 2.750355674992479158691860758065159E-02, 
      2.518047762152124837955024835750951E-02, 2.278951694399781986378345417781470E-02, 
      2.033712072945728677488660559233537E-02, 1.782990101420771998441943405629908E-02, 
      1.527461859678474642925824756443231E-02, 1.267816647681595894219056193907177E-02, 
      1.004755718228798435744925969707590E-02, 7.389931163345455531516956018077193E-03, 
      4.712729926953568640894494767110990E-03, 2.026811968873758496390813074179253E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 30
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_70(n_theta):
    xx = (2.227839528614030969349278248881150E-02,6.679095416755134705107539285127752E-02, 
      .1111709057942986937357523305615658E0,  .1553301378820702473112361409620591E0, 
      .1991809763648576641514034631759092E0,  .2426363594637406464705375744987946E0,  
      .2856100105400378616916647808999164E0,  .3280166093896432578461314544871125E0,  
      .3697719616384618958394046946331844E0,  .4107931659026305893712627679747309E0,  
      .4509987783816478787730492566803831E0,  .490308974557636589269778145036753E0,   
      .5286457076797111396207307682129323E0,  .5659328637188082863729594773834736E0,  
      .6020964124853554894598956852434257E0,  .6370645546097780962788596446885983E0,  
      .6707678640940774056462811950143166E0,  .703139426151528597062948406863532E0,   
      .7341149700609426413077259693238932E0,  .7636329967718995689250950691246326E0,  
      .7916349010078927581076761744879549E0,  .8180650876254411890272319871125506E0,  
      .8428710819989802423225378199000529E0,  .8660036342138586293800459809166245E0,  
      .8874168168633481711243734899943968E0,  .9070681162609228494363527859347297E0,  
      .9249185168979344402722675112184309E0,  .9409325790038153669764556298238635E0,  
      .9550785091142928435610674609095474E0,  .9673282236649864384175014642394297E0,  
      .9776574059575924003939854824252713E0,  .9860455580703986604903503523173393E0, 
      .9924760552116899810989420857595174E0,  .9969362519616801566098134968401843E0, 
      .999418285973575842056742803960876E0)
    wx = (4.454941715975466720216749708015620E-02,4.446096841724636106135605610374745E-02, 
      4.428424653905540677579967438396663E-02,4.401960239018345875513641698162997E-02, 
      4.366756139720144025254842689099830E-02,4.322882250506869870221974316329227E-02, 
      4.270425678944977776996571016979838E-02,4.209490572728440602098388818254758E-02, 
      4.140197912904520863822650397905056E-02,4.062685273678961635122591074145078E-02, 
      3.977106549277652577986038041811661E-02,3.883631648407340397900303048316876E-02, 
      3.782446156922276850757202252497841E-02,3.673750969367269534803975505888146E-02, 
      3.557761890129237040202985621250221E-02,3.434709204990653756854532934033321E-02, 
      3.304837223937242047087428538134414E-02,3.168403796130848173464630716748690E-02, 
      3.025679798015423781602854173621720E-02,2.876948595580828066131028927816758E-02, 
      2.722505481866441715910721013668486E-02,2.562657090846848279898483224661088E-02, 
      2.397720788910029223959667910210128E-02,2.228024045225659583376524911085196E-02, 
      2.053903782432645338449258032890587E-02,1.875705709313342341545029002996226E-02, 
      1.693783637630293253181305710562221E-02,1.508498786544292632058397577549048E-02, 
      1.320219081467672885386989383513036E-02,1.129318464993153695256355371604506E-02, 
      9.361762769699026809209540195137622E-03,7.411769363190189270683056134564404E-03, 
      5.447111874217218312820965617375288E-03,3.471894893078143254999111661675078E-03, 
      1.492721288844515730998907583163076E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 35
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

def legendre_80(n_theta):
    xx = (1.951138325679399765435123410745592E-02,5.850443715242066886174131332020556E-02,
      9.740839844158459906327845013196673E-02,.1361640228091439081583863752262765E0,  
      .1747122918326468125593390480113319E0,  .2129945028576661325723885386863373E0,  
      .250952358392272120535891349129603E0,   .2885280548845118531091393015320684E0,  
      .3256643707477019146191129436274315E0,  .3623047534994873837919543179090803E0,  
      .3983934058819692270243796435433043E0,  .4338753708317560930623867280405184E0,  
      .4686966151705444770360783649624922E0,  .502804111888784987593672750375202E0,   
      .5361459208971319653828675886405173E0,  .5686712681227097847254858065480005E0,  
      .6003306228297517431547465911241278E0,  .6310757730468719662479283872904801E0,  
      .6608598989861198017359671228444192E0,  .6896376443420276007712076350969389E0,  
      .7173651853620998802545767078357182E0,  .7440002975835972723165434485128501E0,  
      .7695024201350413738656160688264126E0,  .7938327175046054499486393117449609E0,  
      .8169541386814634703711249940601426E0,  .838831473580255275616632884564316E0,   
      .8594314066631110969772209925047954E0,  .8787225676782138287037733471343353E0,  
      .8966755794387706831943240720200303E0,  .9132631025717576541715328814926111E0,  
      .9284598771724457961578448140608946E0,  .9422427613098726786936666316607269E0,  
      .9545907663436349058834108575231438E0,  .9654850890437992514705279982310491E0,  
      .9749091405857277933858098478661942E0,  .9828485727386290704218924037494219E0,  
      .9892913024997555313197633404526385E0,  .9942275409656882778921239059711404E0,   
      .9976498643982376888994942081833038E0,  .9995538226516306298800806884550443E0)
    wx = (3.901781365630665481128043925275391E-02, 3.895839596276953111239125924601870E-02, 
      3.883965105905196893177418265206196E-02, 3.866175977407644455884994000850417E-02, 
      3.842499300695942318521243632943891E-02, 3.812971131447763834420679153815100E-02, 
      3.777636436200139741973679174893913E-02, 3.736549023873049002670537687236682E-02, 
      3.689771463827600883915099657324667E-02, 3.637374990583581051052330635376630E-02, 
      3.579439395341605460286158599939062E-02, 3.516052904474759349552650812582604E-02, 
      3.447312045175392879436422664152288E-02, 3.373321498461152281667516303616537E-02, 
      3.294193939764526741561086172818429E-02, 3.210049867348777314805640320968836E-02, 
      3.121017418811470164244148119469968E-02, 3.027232175955798066122001008502135E-02, 
      2.928836958326784769276758601901140E-02, 2.825981605727686239675306154932260E-02, 
      2.718822750048638067110895238185455E-02, 2.607523576756511790294818470626967E-02, 
      2.492253576411549110511784641374548E-02, 2.373188286593010129319252455987464E-02, 
      2.250509024633246192622158925767580E-02, 2.124402611578200638861487917954089E-02, 
      1.995061087814199892858513538741861E-02, 1.862681420829903142873537347635649E-02, 
      1.727465205626930635858420645733283E-02, 1.589618358372568794854560277103376E-02, 
      1.449350804050907288088463130763156E-02, 1.306876159240126920429558692611787E-02, 
      1.162411412079781901917818325695897E-02, 1.016176604110306409313962255405377E-02, 
      8.683945269260858421853172645656261E-03, 7.192904768117312631295827335066496E-03, 
      5.690922451403186093598159568684287E-03, 4.180313124694895233206434916091780E-03, 
      2.663533589512681669293535815086059E-03, 1.144950003186941534504820880540403E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 40
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta
    
def legendre_84(n_theta):
    xx = (1.858790965233213328683010278543570E-2, 5.573803879452821701573112960836674E-2,
      9.281113295543788274625034065081355E-2, .1297559537855247418005375713010256E0,  
      .1665214402205481945040177334940476E0,  .2030567790525534781288094197624308E0,  
      .2393114751583033687251181579797246E0,  .275235421288088560499353715303953E0,   
      .3107789673184639726279707357674511E0,  .3458929888731970591852230198817715E0,  
      .3805289552175887005388012641536069E0,  .4146389963323312193399896833010036E0,  
      .4481759690742023323388776676908375E0,  .4810935223321561760543089485764291E0,  
      .5133461610887614000481038429568732E0,  .5448893092984496889126474419245069E0,  
      .5756793714956741560419375879892794E0,  .6056737930478333896842687739243458E0,  
      .6348311189696914836440142488404371E0,  .6631110512180146343361991426069335E0,  
      .6904745043872484712203072419676923E0,  .7168836597292748238232806268120089E0,  
      .7423020174226099207735247896031601E0,  .7666944470188362826669001856653648E0,  
      .7900272359965968679677376568566534E0,  .8122681363561230390229378705428009E0,  
      .8333864091900214288460544624647865E0,  .8533528671689186615988434889066833E0,  
      .8721399148835790320298107148527846E0,  .8897215869883154611589230933872786E0,  
      .9060735840940084213412170150960479E0,  .9211733063630512177756751415921990E0,  
      .9349998847635588261019000965241184E0,  .9475342099474431239794627714919473E0,  
      .9587589587296934721188493159671992E0,  .9686586181736218976940722839446595E0,  
      .9772195073583157826543484364208285E0,  .9844297971275816515201828072761107E0,  
      .9902795289653566875398581898547546E0,  .9947606382612846411959140179242734E0,  
      .9978670164217119615614189657836249E0,  .9995950612269232422047474362409048E0)
    wx = (3.717153701903406760328361254495222E-02,3.712016261260209426792065918003535E-02,
      3.701748480379452058524442369476403E-02,3.686364550259030771845207163781884E-02,
      3.665885732875903770520019250952715E-02,3.640340331800212248862625982276467E-02,
      3.609763653077256200378421794563139E-02,3.574197956431530727788897302708002E-02,
      3.533692396860127616038872488889414E-02,3.488302956696330810204832919050865E-02,
      3.438092368237270062133493312322288E-02,3.383130027042598480372489137741371E-02,
      3.323491896024044033454642581751553E-02,3.259260400458425718361329250013840E-02,
      3.190524314069272748402296559979847E-02,3.117378636334566129196479166850561E-02,
      3.039924461190246977301716964137108E-02,2.958268837311084528960501062824248E-02,
      2.872524620162180221266477937951186E-02,2.782810316025840603576692032857572E-02,
      2.689249918219763751581620055781127E-02,2.591972735733464772257132818332153E-02,
      2.491113214520642888437000543341048E-02,2.386810751695823938471541974979473E-02,
      2.279209502894212933888863339679499E-02,2.168458183064482298924403717092431E-02,
      2.054709860975627861150522901844093E-02,1.938121747731880864674512724863283E-02,
      1.818854979605654992759875343149397E-02,1.697074395521160697064101179571367E-02,
      1.572948309558359818479830995676932E-02,1.446648278916118551721786291535556E-02,
      1.318348867918220687748714786383844E-02,1.188227408980120161267706373787143E-02,
      1.056463762300824315670965016565020E-02,9.232400784190246929512512823817853E-03,
      7.887405752648146380716392633719634E-03,6.531513687713654561930541674134780E-03,
      5.166605182746799084537600551025576E-03,3.794591650452349691689489290152894E-03,
      2.417511265443122855235191728089319E-03,1.039133516451971889149297809215502E-03)
    costheta = numpy.zeros((n_theta))
    weights_theta = numpy.zeros((n_theta))
    nn = 40
    n1 = nn-1
    for i in range(nn):
        costheta[nn+i] = xx[i]
        costheta[n1-i] =-xx[i]
        weights_theta[nn+i] = wx[i]
        weights_theta[n1-i] = wx[i]
    return costheta, weights_theta

Cthwth_dict = {
    '10': legendre_10,
    '15': legendre_15,
    '20': legendre_20,
    '25': legendre_25,
    '30': legendre_30,
    '40': legendre_40,
    '50': legendre_50,
    '60': legendre_60,
    '70': legendre_70,
    '80': legendre_80,
    '84': legendre_84
}